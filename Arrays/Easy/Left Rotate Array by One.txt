Given an integer array nums, rotate the array to the left by one.


Example 1
Input: nums = [1, 2, 3, 4, 5]

Output: [2, 3, 4, 5, 1]

Explanation: Initially, nums = [1, 2, 3, 4, 5]

Rotating once to left -> nums = [2, 3, 4, 5, 1]

Example 2
Input: nums = [-1, 0, 3, 6]

Output: [0, 3, 6, -1]

Explanation: Initially, nums = [-1, 0, 3, 6]

Rotating once to left -> nums = [0, 3, 6, -1]


Brute Force ( By using another array ) : 

class Solution {
public:
    void rotateArrayByOne(vector<int>& nums) {

        int n = nums.size();

        int arr[n];

        for(int i=0;i<n;i++){
            if((i - 1) < 0){
                arr[ i - 1 + n] = nums [i];
            } 
            else{
                arr[i - 1] = nums [i];
            }
        }

        for(int i=0;i<n;i++){
            nums[i] = arr[i];
        }


    }
};

TC : O(N) & SC : O(N).


Optimal approach : 

class Solution {
public:
    void rotateArrayByOne(vector<int>& nums) {

        int n = nums.size();

        int temp = nums[0];

        for(int i = 1; i<n;i++){
            nums[i-1] = nums[i];
        }

        nums[n-1] = temp;
    }
};

TC : O(N)
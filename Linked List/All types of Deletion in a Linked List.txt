At Head :-

ListNode* deleteHead(ListNode* &head) {
        if(head == NULL) return NULL;

        ListNode* temp = head;
        head = head -> next;
        delete temp;

        return head;
    }

At Tail :- 

ListNode* deleteTail(ListNode* &head) {

        // Checking if empty or 1 element LL
        if(head == NULL || head -> next == NULL) return NULL;

        ListNode* temp = head;

        while(temp -> next -> next != NULL){
            temp = temp -> next;
        }

        delete temp->next;
        temp -> next = nullptr;

        return head;

    }

At kth position :- 

 ListNode* deleteKthNode(ListNode* &head, int k) {

        if(head == NULL) return NULL;
            

        if(k == 1){
            head = head -> next;
            return head;
        }
        ListNode* temp = head;
        ListNode* prev = NULL;
        int count = 0;

        while(temp != NULL){
            count++;
            if(count == k){
                prev -> next = temp -> next;
                delete temp;
                break;
            }
            
            prev = temp;
            temp = temp -> next;
        }

        return head;
    }

Delete a specific element :-

 ListNode* deleteNodeWithValueX(ListNode* &head, int x) {

        if(head == NULL) return NULL;

        //checking for head
        if(head -> val == x){
            head = head -> next;
            return head;
        }

        ListNode* temp = head;
        ListNode* prev = NULL;

        // traversing the entire LL and if found disconnect the connections.
        while(temp != NULL){
            if(temp -> val == x){
                prev -> next = temp -> next;
                delete temp;
                break;
            }
            prev = temp;
            temp = temp -> next;
        }
    

        return head;

    }

